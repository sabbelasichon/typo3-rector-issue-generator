#!/usr/bin/env php
<?php
require __DIR__ . '/../vendor/autoload.php';

use Github\AuthMethod;
use Github\Client;
use Ssch\Typo3rectorIssueGenerator\Decider\CompositeChangelogDecider;
use Ssch\Typo3rectorIssueGenerator\Decider\NonFeatureDecider;
use Ssch\Typo3rectorIssueGenerator\Decider\NonIndexDecider;
use Ssch\Typo3rectorIssueGenerator\Dto\Credentials;
use Ssch\Typo3rectorIssueGenerator\Output\SymfonyConsoleOutput;
use Ssch\Typo3rectorIssueGenerator\Repository\KnpLabsGithubChangelogRepository;
use Ssch\Typo3rectorIssueGenerator\Repository\KnpLabsGithubIssueRepository;
use Ssch\Typo3rectorIssueGenerator\Repository\SqlLite3IssueRepository;
use Ssch\Typo3rectorIssueGenerator\Service\IssueImportService;
use Ssch\Typo3rectorIssueGenerator\ValueObject\Version;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;
use Symfony\Component\Dotenv\Dotenv;

$dotenv = new Dotenv();
$dotenv->load(__DIR__.'/../.env');

(new SingleCommandApplication())
    ->setName('Import TYPO3 Changelogs')
    ->setVersion('1.0.0')
    ->addArgument('versions', InputArgument::IS_ARRAY | InputArgument::REQUIRED, 'The TYPO3 Versions')
    ->setCode(function (InputInterface $input, OutputInterface $output): int {

        $credentials = new Credentials('sabbelasichon', 'typo3-rector', $_ENV['GITHUB_ACCESS_TOKEN']);
        $versions = array_map(static fn(string $version) => new Version($version), $input->getArgument('versions'));

        $client = new Client();
        $client->authenticate($credentials->getAccessToken(), null, AuthMethod::ACCESS_TOKEN);

        (new IssueImportService(
            new KnpLabsGithubChangelogRepository($client),
            new SqlLite3IssueRepository(new SQLite3(__DIR__ . '/../db/issues.db')),
            new KnpLabsGithubIssueRepository($client, $credentials),
            new CompositeChangelogDecider([new NonIndexDecider(), new NonFeatureDecider()])
        ))->import($versions, new SymfonyConsoleOutput($output));

        return Command::SUCCESS;
    })
    ->run();